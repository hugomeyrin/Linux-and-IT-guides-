 Configuration

    Serveur NAS

        Synology DS414 (x volumes)

        DSM v.6.2.3

    Client Linux

        Kubuntu 18.04

    LAN

        RJ45 cat.7 / Wifi dÃ©sactivÃ©

 

PrÃ©paration du NAS (serveur ssh et rsync)

Compte Â« Admin Â» dÃ©sactivÃ©

Compte utilisateur Â« Moi Â» activÃ© en mode administrateur

    Activer le service SSH :

        AccÃ©der Ã  la page des paramÃ¨tres du terminal sur votre pÃ©riphÃ©rique Synology : DSM > Panneau de configuration > Terminal & SNMP > Terminal.

            Cocher la case Activer le service SSH.

            SpÃ©cifier un numÃ©ro de port pour les connexions SSH et enregistrer les paramÃ¨tres. Certains prÃ©conisent (d'autres non) de remplacer le port 22 par dÃ©faut par un autre (ici 22222 pour lâ€™exemple) afin de garantir une meilleure sÃ©curitÃ© du systÃ¨me.

    Activer le service rsync :

        AccÃ©der Ã  la page des paramÃ¨tres Services de fichier sur votre pÃ©riphÃ©rique Synology : DSM > Panneau de configuration > Services de fichiers > rsync > Activer le service rsync

        Dans la case Â« Port de chiffrement SSH Â», mettre le port spÃ©cifique que vous avez choisi prÃ©cÃ©demment. Attention, lorsque lâ€™on clique sur Â« Activer le service rsync Â» et que le firewall du DSM est actif, ce dernier va crÃ©er des rÃ¨gles. Une fenÃªtre de notification apparaÃ®tra Ã  cet effet si vous avez validÃ© lâ€™option des notifications.
        VÃ©rifier que lâ€™utilisateur a les permissions rsync : DSM > Panneau de configuration > Utilisateur > Le_nom_de_lâ€™utilisateur (ici Moi) > Modifier > Applications> rsync (doit Ãªtre cochÃ©)

        VÃ©rifier lâ€™activation des ports dans le pare-feu du NAS :

            Les ports rsync et Â« service terminal chiffrÃ© Â» (SSH) doivent Ãªtre activÃ©s et le port SSH doit correspondre Ã  celui choisi (par dÃ©faut 22, dans notre exemple 22222)
            Attention comme indiquÃ© prÃ©cÃ©demment, lâ€™activation du service rsync a normalement crÃ©Ã©e automatiquement des rÃ¨gles pour autoriser rsync. Dans mon cas, jâ€™avais au prÃ©alable autorisÃ© les rÃ¨gles pour rsync et ssh dans le firewall dans un profil personnalisÃ©. Aussi, lâ€™ajout automatique des rÃ¨gles lors de lâ€™activation du service rsync ne me semblait pas utile puisque en doublon avec ceux existant dÃ©jÃ  dans mon profil. Bien que les rÃ¨gles rsync et ssh soient exactement les mÃªmes que les miennes (mÃªme port, mÃªme protocole), la suppression des rÃ¨gles automatiques rend impossible (Â« denied Â») la communication entre le client et le serveur. Soit câ€™est un bug DSM, soit je merdoume de mon cÃ´tÃ© mais impossible de trouver ce qui cloche dans mon profil firewall...

            CrÃ©er un dossier partagÃ© de sauvegarde : DSM > Panneau de configuration > Dossier partagÃ© > CrÃ©er

                Donner un nom (ici Â« Synchronisation Â»), choisir un volume (ici "volume 1"), activer la corbeille

                Donner les permissions Â« Lecture/Ecriture Â» pour votre profil (ici Â« Moi Â») et interdire Ã  tous les autres utilisateurs (Â« Pas dâ€™accÃ¨s Â»)

 

PrÃ©paration du PC linux (client ssh, rsync et clÃ©s de cryptage)

Le nom d'utilisateur du PC linux : krzyzstof

    Par dÃ©faut rsync est installÃ© sur tous les postes linux. Si tel nâ€™Ã©tait pas taper dans le terminal la commande :

    sudo apt-get install rsync

     

    Par dÃ©faut ssh client est installÃ© sur tous les postes linux. Si tel nâ€™Ã©tait pas taper dans le terminal la commande :

    sudo apt-get install openssh-client

     

    CrÃ©ation des clÃ©s de cryptage

        Taper dans le terminal :

        ssh-keygen -t rsa -b 4096 -C "ClÃ© ssh Moi"

        oÃ¹ Â« rsa Â» correspond Ã  lâ€™algorithme de cryptage ; Â« 4096 Â» la force du cryptage ; Â« -C Â» permet dâ€™insÃ©rer un commentaire (cet attribut et le commentaire sont optionnels, on peut donc Ã©crire la ligne de commande sans cette partie).

        Le terminal vous renseigne sur la crÃ©ation des clÃ©s public et privÃ©e. Il vous demande alors :

            le dossier de destination oÃ¹ enregistrer les clÃ©s. Il vous propose un dossier par dÃ©faut (quâ€™il est conseillÃ© de valider) du type : /home/moi/.ssh/id_rsa

            une phrase de passe (Ã©quivalent dâ€™un mot de passe) afin de chiffrer la clÃ© privÃ©e. Il est conseillÃ© dâ€™en donner une pour une meilleure sÃ©curitÃ© mÃªme en local. Si vous ne voulez pas en inscrire une alors validez la question par Â« ENTREE Â», sinon renseignez votre clÃ© (et ne lâ€™oubliez pas, elle vous sera redemandÃ© pour les connexions). Dans ce tuto, les instructions qui suivent prennent en considÃ©ration lâ€™existence dâ€™une phrase de passe.

                La clÃ© publique (id_rsa.pub) et la clÃ© privÃ©e (id_rsa) se trouve donc dans le dossier dit cachÃ© : /home/votre_profil/.ssh

    Envoi de la clÃ© publique sur le NAS (serveur ssh)

        Ouvrir le terminal dans le dossier contenant la clÃ© public et privÃ©e, soit dans /home/votre_profil/.ssh/

        Taper dans le terminal la commande de type :

        ssh-copy-id -i id_rsa.pub votre_utilisateur_NAS@IP_local_NAS -p port_spÃ©cifique_ssh

        soit dans notre exemple fictif :

        ssh-copy-id -i id_rsa.pub Moi@192.168.1.100 -p 22222

         

        A la demande de mot de passe, donner le mot de passe de votre compte utilisateur NAS (et non de la phrase de passe de la clÃ© de cryptage privÃ©e).

        Avec son navigateur internet, se connecter au DSM et vÃ©rifier que dans le dossier du compte utilisateur (ici Moi), le dossier Â« .ssh/ Â» et le fichier Â« authorized_keys Â» ont Ã©tÃ© crÃ©Ã©s. VÃ©rifier le contenu du ficher Â« .ssh/authorized_keys Â»

        Revenir sur le Terminal Linux et faire un test de connexions en ssh cryptÃ© en tapant la commande de type :

        ssh votre_utilisateur_NAS@IP_local_NAS -p port_spÃ©cifique_ssh

         soit dans notre exemple fictif :

        ssh Moi@192.168.1.100 -p 22222

         

        Donner cette fois la phrase de passe de votre clÃ© de cryptage privÃ©e.

        Vous Ãªtes connectÃ© si vous nâ€™avez pas de message dâ€™erreur* et que vous avez lâ€™invite commande de type :

        votre_utilisateur_NAS@Nom_du_NAS:~$ 

        soit dans notre exemple :

        Moi@DS414:~$

            * si vous avez le message : Â« Connection closed by 192.168.1.100 port 22222 Â», câ€™est qu'il y a de fortes chances que vous avez Ã©tÃ© trop long Ã  rentrer votre phrase de passe ğŸ˜œ

        Pour se dÃ©loguer taper dans le terminal :

        exit

         

Processus de synchronisation

    modÃ¨le thÃ©orique en mode ssh :

    rsync "-e ssh -p numÃ©ro_port_ssh" choix_des_attributs /home/mondossier_source user@ip_du_serveur:/dossier/destination/

     

    # ATTRIBUTS (en vert ceux retenus dans notre cas)

        # -a : archive â‡’ prÃ©serve les dates, permissions, etc â€¦ des fichiers. Inclus l'option rÃ©cursivitÃ©. Option Ã  utiliser quand on veut transfÃ©rer des rÃ©pertoires entiers avec leurs sous-rÃ©pertoires en prÃ©servant toutes les caractÃ©ristiques des fichiers. Equivalent aux attributs groupÃ©s de -rlptgoD

        # -D : prÃ©serve les pÃ©riphÃ©riques

        # -e ssh -p numÃ©ro_port_ssh : utilise le protocole SSH avec un port ssh spÃ©cifique (si le port par dÃ©faut 22 a Ã©tÃ© configurÃ© dans le serveur ssh, alors "-p numÃ©ro_port_ssh" est inutile. Si un port spÃ©cifique a Ã©tÃ© choisi, il faut alors mettre l'attribut -e ssh -p numÃ©ro_port_ssh entre guillemet, soit : "-e ssh -p numÃ©ro_port_ssh". Je suppose que cela doit Ãªtre pour ne pas confondre avec l'attribut -p ci-dessous)

        # -g : prÃ©serve le groupe

        # -h : les chiffres produits sont dans un format de lecture lisible par les humains.

        # -l : copie les liens symboliques comme liens symboliques. Est inclus dans l'option -a

        # -L : remplace les liens symboliques par les fichiers rÃ©fÃ©rencÃ©s.

        # -n : simule la sauvegarde mais n'effectue aucune opÃ©ration concrÃ¨te de sauvegarde. TrÃ¨s intÃ©ressant pour simuler et vÃ©rifier les Ã©ventuelles erreurs.

        # -o : mettre le propriÃ©taire du fichier de destination identique Ã  celui du fichier source

        # -p : provoque la mise Ã  jour des permissions sur la destination pour qu'elles soient identiques aux permissions sur la source

        # -q : n'affiche que les lignes d'erreur lors du transfert. Ainsi si notre synchronisation nous retourne des erreurs de transfert Ã  la fin du processus, le fait de rajouter -q et de relancer le backup permet d'afficher les seuls lignes de contrÃ´le concernant les erreurs

        # -r : la synchro est rÃ©cursive (elle prend les sous-rÃ©pertoires). Est inclus dans l'option -a

        # -t : prÃ©serve les dates

        # -v : verbeux (affichage de ce que fait la commande pendant qu'elle le fait).

        # -z : compresse les fichiers (Limite la bande passante mais augmente l'utilisation processeur et le temps de transfert : inutile en rÃ©seau local ou avec trÃ¨s bon dÃ©bit)

        # --del : permet de supprimer les fichiers sur "destination" qui n'existent plus sur "source"

        # --delete : --delete : efface avant le transfert les fichiers qui n'existent pas sur la source.

        # --delete-after : Ã  la fin du transfert, supprime les fichiers dans le dossier de destination ne se trouvant pas dans le dossier source.

        # --delete-excluded : si lâ€™on a choisi des fichiers Ã  exclure du transfert et quâ€™ils sont dÃ©jÃ  prÃ©sents dans le dossier de destination, ils seront effacÃ©s de la destination.

        # --exclude="nom_de_dossier" (exclure des fichiers ou dossiers de la sauvegarde : rsync --exclude="nom_de_dossier" --exclude="- autre_nom_de_dossier" source/ destination/)

        # --force : force la suppression de rÃ©pertoires mÃªme non-vides

        # --ignore-errors : efface mÃªme s'il y a eu des erreurs E/S (IO error)

        # --progress : montre l'avancement pendant le transfert Ã  la diffÃ©rence de -v

        # --stats : affiche quelques statistiques de transfert de fichiers, ce qui permet de vÃ©rifier l'efficacitÃ© de la sauvegarde

         

    Notre synchro en mode simulation :

    rsync "-e ssh -p 22222" -h --progress --stats -an --update --delete-after --delete-excluded --ignore-errors --exclude=**/*tmp*/ --exclude=**/*cache*/ --exclude=**/*Cache*/ --exclude=**~ --exclude=/mnt/*/** --exclude=/media/*/** --exclude=**/lost+found*/ --exclude=/var/run/** --exclude=/run/** --exclude=/proc/** --exclude=/dev/** --exclude=/sys/** --exclude=**/*Trash*/ --exclude=**/*trash*/ --exclude=/krzyzstof/test/** --exclude=/krzyzstof/.local/share/baloo/** /home/krzyzstof Moi@192.168.1.100:/volume1/Synchronisation

        Pour info, les attributs et les exclusions correspondent Ã  mes choix et Ã  ma configuration, chacun est libre de modifier les paramÃ¨tres et les dossiers. Ici par exemple le dossier "baloo" contient l'indexation par Linux KDE de tous mes documents sur mon PC. C'est trÃ¨s trÃ¨s lourd en termes de Go et inutile Ã  synchroniser.

        Nous avons rajouter lâ€™option Â« --ignore-errors Â» car le transfert nous retournait lâ€™erreur Â« IO error encountered -- skipping file deletion Â» malgrÃ© le fait que les permissions de lecture/Ã©criture Ã©tait bien accordÃ© Ã  lâ€™utilisateur pour le dossier de destination ainsi que toute son arborescence. Bref, impossible dâ€™effacer les fichiers sur la destination lors de la synchronisation. Câ€™est un problÃ¨me qui revient souvent dans les sujets de forums. Je nâ€™ai pas trÃ¨s bien compris les raisons mais lâ€™option Â« --ignore-errors Â» a Ã©tÃ© pensÃ© expressÃ©ment pour pallier ce problÃ¨me.

    Notre synchro en mode rÃ©el

    rsync "-e ssh -p 22222" -h --progress --stats -a --update --delete-after --delete-excluded --ignore-errors --exclude=**/*tmp*/ --exclude=**/*cache*/ --exclude=**/*Cache*/ --exclude=**~ --exclude=/mnt/*/** --exclude=/media/*/** --exclude=**/lost+found*/ --exclude=/var/run/** --exclude=/run/** --exclude=/proc/** --exclude=/dev/** --exclude=/sys/** --exclude=**/*Trash*/ --exclude=**/*trash*/ --exclude=/krzyzstof/test/** --exclude=/krzyzstof/.local/share/baloo/** /home/krzyzstof Moi@192.168.1.100:/volume1/Synchronisation

     

    Notre synchro en mode rÃ©el avec l'affichage des seuls lignes de contrÃ´le comportant des erreurs de transfert

    rsync "-e ssh -p 22222" -h -q --progress --stats -a --update --delete-after --delete-excluded --ignore-errors --exclude=**/*tmp*/ --exclude=**/*cache*/ --exclude=**/*Cache*/ --exclude=**~ --exclude=/mnt/*/** --exclude=/media/*/** --exclude=**/lost+found*/ --exclude=/var/run/** --exclude=/run/** --exclude=/proc/** --exclude=/dev/** --exclude=/sys/** --exclude=**/*Trash*/ --exclude=**/*trash*/ --exclude=/krzyzstof/NAS_DS414/** --exclude=/krzyzstof/.local/share/baloo/** /home/krzyzstof Moi@192.168.1.100:/volume1/Synchronisation

     
